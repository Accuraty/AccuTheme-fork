// ============================================================================
//
//  Reset
//
//  This file is to reset opinionated styles and common conflicts created
//  by using DNN and Bootstrap together. The purpose of this reset is to give
//  us a clean(er) canvas to use Bootstrap without ugly hacks in the codebase.
//
//  Updated: 4/18/2017 by Chris Lusk
//
// ============================================================================



// ----------------------------------------------------------------------------
//
//  1. Quick, specific fixes
//
// ----------------------------------------------------------------------------

.DnnModule {
    clear: both;
    position: relative;

    & + .DnnModule {
        margin-top: 2rem;
    }
}

.form-group .dnnLabel {
    text-align: left;
    width: auto;
}

.dnnLabel + span {
    white-space: normal;
}

#ControlBar, #ControlBar::before, #ControlBar::after,
#ControlBar li, #ControlBar li::before, #ControlBar li::after,
#ControlBar a, #ControlBar a::before, #ControlBar a::after,
.dnn_mact, .dnn_mact::before, .dnn_mact::after,
.dnn_mact li, .dnn_mact li::before, .dnn_mact li::after {
    -webkit-box-sizing: content-box !important;
    -moz-box-sizing: content-box !important;
    box-sizing: content-box !important;
}

.dnnDropDownList .selected-item,
.dnnDropDownList .selected-item a {
    height: auto !important;
}










// ----------------------------------------------------------------------------
//
//  2. Reset DNN styles from `_default.css`
//
// ----------------------------------------------------------------------------



//
// Modules
// =======
//
// Reference: _default.css:22 (DNN 8)
//
// 1. Module titles.
// 2. Text inside modules.
// 3. Help text rendered by modules.
// 4. Rendered text that requires emphasis.
// 5. Used for error messages.
// ----------------------------------------------------------------------------

.Head { // 1
  margin: 0;
}

.Normal,
.NormalDisabled,
.NormalDeleted { // 2
  color: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
}

.NormalDisabled,
.NormalDeleted {
  color: $text-muted;
}

.Help { // 3
  background-color: $state-warning-bg;
  border: $border-width solid darken($state-warning-bg, 5%);
  color: $state-warning-text;
}

.NormalBold { // 4
  font-weight: $weight-bold;
  color: inherit;
}

.NormalRed { // 5
  font-weight: $weight-bold;
  color: $brand-danger;
}



//
// Blockquote
// ==========
//
// Reference: _default.css:260 (DNN 7)
// ----------------------------------------------------------------------------
blockquote {
  border: 0;
  padding: 0;

  &,
  p {
    color: inherit;
    font-size: inherit;
    font-style: inherit;
    line-height: inherit;
  }

  cite {
    color: inherit;
    display: initial;
    font-size: inherit;

    &::before {
      content: '';
      display: none;
    }

    a {
      @include plain-visited {
        color: inherit;
      }
    }
  }
}



//
// Anchor styles
// =============
//
// Reference: _default.css:297 (DNN 7)
// ----------------------------------------------------------------------------

a {

  @include plain-visited {
    color: inherit;
    text-decoration: inherit;
    outline: inherit;
  }

  @include hover-focus-active {
    color: inherit;
    outline: inherit;
  }
}




//
// Image styles
// ============
//
// Reference: _default.css:315 (DNN 7)
// ----------------------------------------------------------------------------

// img {}




//
// List styles
// ===========
//
// Reference: _default.css:333 (DNN 7)
// ----------------------------------------------------------------------------

ul,
ol {
  list-style: initial;
  margin: 0;

  ul,
  ol {
    list-style: initial;
    margin: 0;
  }
}

li {
  p {
    line-height: inherit;
  }
}



//
// Message
// =======
//
// Bring these messages into alignment with Bootstrap alerts.
//
// Reference: _default.css:100 (DNN 8)
// ----------------------------------------------------------------------------

.dnnFormMessage {
  background-color: $alert-info-bg;
  border: $alert-border-width solid $alert-info-border;
  -webkit-border-radius: $alert-border-radius;
  border-radius: $alert-border-radius;
  color: $alert-info-text;
  margin-bottom: $spacer;
  max-width: none;
  padding: $alert-padding-y $alert-padding-x;

  &.dnnFormError,
  &.dnnFormValidationSummary {
    background-color: $alert-danger-bg;
    border-color: $alert-danger-border;
  }

  &.dnnFormWarning {
    background-color: $alert-warning-bg;
    border-color: $alert-warning-border;
  }

  &.dnnFormSuccess {
    background-color: $alert-success-bg;
    border-color: $alert-success-border;
  }
}



//
// Tables
// ======
//
// DNN uses `.dnnTableHeader` and `.dnnTableDisplay`. Skipping this.
//
// Reference: _default.css:130 (DNN 8)
// ----------------------------------------------------------------------------




//
// Pagination
// ==========
//
// DNN uses `.dnnResults` and `.dnnPagination`. Skipping this.
//
// Reference: _default:css:285 (DNN 8)
// ----------------------------------------------------------------------------




//
// Forms
// =====
//
// Reference: _default:css:321 (DNN 8)
// ----------------------------------------------------------------------------

// .dnnFormItem input[type="text"],
// .dnnFormItem select,
// .dnnFormItem textarea,
// .dnnFormItem input[type="email"],
// .dnnFormItem input[type="search"],
// .dnnFormItem input[type="password"] {
//   background-color: $input-bg;
//   // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214.
//   background-image: none;
//   background-clip: padding-box;
//   border: $input-btn-border-width solid $input-border-color;
//   color: $input-color;
//   display: block;
//   font-size: $font-size-base;
//   line-height: $input-line-height;
//   padding: $input-padding-y $input-padding-x;
//   width: 100%;

//   // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
//   @if $enable-rounded {
//     // Manually use the if/else instead of the mixin to account for iOS override
//     border-radius: $input-border-radius;
//   } @else {
//     // Otherwise undo the iOS default
//     border-radius: 0;
//   }
// }

// .dnnFormItem input.aspNetDisabled,
// .dnnFormItem textarea.aspNetDisabled {
//   background: #ebebeb;
//   -moz-box-shadow: none;
//   -webkit-box-shadow: none;
//   box-shadow: none;
//   border-color: #a7a7a7;
//   border-width: 1px;
// }

// .aspNetDisabled, a.aspNetDisabled,
// .dnnDisabled, a.dnnDisabled {
//   color: #ccc;
//   cursor: not-allowed;
//   text-decoration: none;
// }

// //## Active and focus states
// .dnnFormItem input[type="text"]:active, .dnnFormItem input[type="text"]:focus,
// .dnnFormItem input[type="password"]:focus, .dnnFormItem input[type="password"]:active,
// .dnnFormItem input[type="email"]:active, .dnnFormItem input[type="email"]:focus,
// .dnnFormItem select:active, .dnnFormItem select:focus,
// .dnnFormItem textarea:active, .dnnFormItem textarea:focus,
// .dnnFormItem input[type="search"]:active, .dnnFormItem input[type="search"]:focus {
//     background: #fff;
//     border: 1px solid rgba(2,139,255,0.5); /* blue */
//     -webkit-box-shadow: 0px 0px 3px 0px rgba(2, 139, 255, 0.4);
//     box-shadow: 0px 0px 3px 0px rgba(2, 139, 255, 0.4);
//     color: #333;
// }

// //## Required fields
// .required label:after,
// legend.required:after {
//     display: inline-block;
//     margin-top: -2px;
//     margin-left: 9px;
//     padding: 1px 9px;
//     border: 1px solid rgba(0,0,0,0.1);
//     border-radius: 3px;
//     -webkit-border-radius: 3px;
//     background: rgba(0,0,0,0.03);
//     content: 'Required';
//     font-weight: $weight-normal;
//     font-family: $font-family-base;
//     font-size: 11px;
//     font-style: italic;
//     color: #777;
// }

//## Error styles
.error label, legend.error {
  color: rgba($red,.9);
}

.error input[type="text"],
.error select, .error textarea,
.error input[type="email"],
.error input[type="search"] {
    border: 1px solid rgba($red,.6);
    color: rgba($red,.7);
}




//
// Buttons
// =======
//
// Reference: _default.css:410 (DNN 8)
// ----------------------------------------------------------------------------

// .dnnFormItem button, .dnnFormItem input[type="button"],
// .dnnFormItem input[type="reset"],
// .dnnFormItem input[type="submit"],
// .dnnPrimaryAction,
// .dnnSecondaryAction,
// .dnnTertiaryAction,
// ul.dnnAdminTabNav li a,
// .dnnLogin .LoginTabGroup span {
//     display: inline-block;
//     padding: 9px 9px;
//     margin-bottom: 9px;
//     cursor: pointer;
//     min-width: 75px;
//     *overflow: visible;
//     border: 1px solid $gray-c;
//     background-color: $gray-e;
//     border-radius: $border-radius-normal;
//     color: $gray-3;
//     font-weight: $font-weight-bold;
//     text-decoration: none;
//     text-align: center;
// }

// .dnnFormItem button, .dnnFormItem input[type="button"],
// .dnnFormItem input[type="reset"],
// .dnnFormItem input[type="submit"],
// .dnnPrimaryAction,
// .dnnSecondaryAction,
// .dnnTertiaryAction {
//     padding: 6px 6px;
// }


// //## Primary Action

// .dnnPrimaryAction,
// .dnnFormItem input[type="submit"],
// a.dnnPrimaryAction {
//   border-color: #0D569E; /*dark blue*/
//   background: #3792ED;
//   background: linear-gradient(top, #358eea 0%,#2170cd 100%);
//   box-shadow: 0 1px 0 0 rgba($black,.6), inset 0 1px 0 0 rgba($white,.4);
//   color: #efefef;
//   text-shadow: 0px -1px 0px #185B93;
// }

// .dnnPrimaryAction:hover,
// .dnnFormItem input[type="submit"]:hover,
// a.dnnPrimaryAction:hover {
//   border-color: #0D569E;
//   background: #6cb6f3;
//   background: linear-gradient(top, #6cb6f3 0%,#4387d2 100%);
//   color: $white;
// }

// .dnnPrimaryAction:active,
// .dnnFormItem input[type="submit"]:active,
// a.dnnPrimaryAction:active {
//   border-color: #0D569E;
//   background: #1f66be;
//   background: linear-gradient(top, #1f66be 0%,#3085e0 100%);
//   box-shadow: inset 0 1px 5px 0 rgba($black, .4);
//   color: $white;
// }

// .dnnPrimaryAction[disabled],
// .dnnPrimaryAction[disabled]:hover,
// .dnnPrimaryAction[disabled]:active {
//   background: #ccc !important;
//   border: none !important;
//   box-shadow: none !important;
//   color: #aaa !important;
//   text-shadow: none;
// }

// //## Secondary Action

// .dnnFormItem button, .dnnFormItem input[type="button"],
// .dnnFormItem input[type="reset"],
// .dnnSecondaryAction,
// a.dnnSecondaryAction,
// ul.dnnAdminTabNav li a,
// .dnnLogin .LoginTabGroup span {
//   background: #f5f5f5;
//   background: linear-gradient(top, #f5f5f5 0%,#dfdfdf 100%);
//   box-shadow: 0 1px 0 0 rgba($black,.4), inset 0 1px 0 0 rgba($white, 1);
//   text-shadow: 0px 1px 0px #ffffff;
//   color: #333;

//   @include hover-focus {
//     background: #fefefe;
//     background: linear-gradient(top, #fefefe 0%,#e8e8e8 100%);
//     color: #555;
//   }

//   &:active {
//     border-color: #999;
//     background: #c6c6c6;
//     background: linear-gradient(top, #c6c6c6 0%,#f3f3f3 100%);
//     box-shadow: inset 0 1px 5px 0 rgba($black,.4);
//   }
// }

// //## Tertiary Action
// .dnnTertiaryAction,
// a.dnnTertiaryAction {
//   padding: 10px 10px;
//   border: none;
//   background-color: $gray-e;
//   color: $gray-3;

//   @include hover-focus {
//     background-color: $gray-f3;
//   }

//   &:active {
//     background-color: $gray-d;
//   }
// }


// //## Action Button behind input

// .dnnFormItem input[type="text"] {

//   & + a.dnnPrimaryAction,
//   & + a.dnnSecondaryAction,
//   & + a.dnnTertiaryAction {
//     margin-left: 5px;
//   }
// }

// .dnnFormItem input[type="checkbox"] + span,
// .dnnFormItem input[type="radio"] + span {
//   margin: 5px;
// }


// //## Buttons and link buttons used in the portal admin pages

// .StandardButton {
//   border: 1px solid $blue;
// }

// /* Re-set default cursor for disabled elements */
// .dnnFormItem button[disabled],
// .dnnFormItem input[disabled] {
//     cursor: default;
//     opacity: 0.5;
// }

// /* Consistent box sizing and appearance */
// .dnnFormItem input[type="checkbox"],
// .dnnFormItem input[type="radio"] {
//     *width: 13px;
//     *height: 13px; /*why are we using hacks here*/
//     padding: 0;
//     box-sizing: border-box;
// }

// .dnnFormItem input[type="search"] {
//     -webkit-appearance: textfield;
//     -moz-box-sizing: content-box;
//     -webkit-box-sizing: content-box;
//     box-sizing: content-box;
// }

//     .dnnFormItem input[type="search"]::-webkit-search-decoration,
//     .dnnFormItem input[type="search"]::-webkit-search-cancel-button {
//         -webkit-appearance: none;
//     }

// .dnnFormItem textarea {
//     overflow: auto;
//     vertical-align: top;
//     resize: vertical;
// }

//     /* Colors for form validity */
//     .dnnFormItem input:valid, .dnnFormItem textarea:valid {
//     }

//     .dnnFormItem input:invalid, .dnnFormItem textarea:invalid {
//         background-color: #f0dddd;
//     }


//
// Taxonomy
// ========
//
// DNN uses `.horizontal` and `.vertical` as parent classes before it uses
// `ul.categories` and `ul.tags` for taxonomy. Skipping this.
//
// Reference: _default.css:651 (DNN 8)
// ----------------------------------------------------------------------------




//
// Tabs : jQuery UI tabs 1.8.14
// ============================
//
// DNN uses `.dnnAdminTabNav`. Skipping this.
//
// Reference: _default.css:698 (DNN 8)
// ----------------------------------------------------------------------------




//
// Login Tab Group
// ===============
//
// Skipping, for now.
//
// Reference: _default.css:744 (DNN 8)
// ----------------------------------------------------------------------------




//
// Tabs : jQuery UI Resizable 1.8.14
// =================================
//
// Skipping this.
//
// Reference: _default.css:770 (DNN 8)
// ----------------------------------------------------------------------------




//
// Form Items
// ==========
//
// Reference: _default.css:854 (DNN 8)
//
// 1.
// ----------------------------------------------------------------------------

.dnnForm {
  width: initial;

  fieldset {
    clear: initial;
    position: initial;
    margin: 0;
    text-align: initial;
    border: initial;

    fieldset {}
  }

  .dnnFormItem {}
}


//## Label

.dnnTooltip {}

.dnnHelperTip {}

.dnnDragdropTip {}

span.dnnFormRequired:after,
div.dnnFormItem.dnnFormRequired > div.dnnLabel span:after {
  color: $red;
  font-size: $font-size-base;
  font-weight: $font-weight-bold;
  margin: 0 0 0 .25rem;
}

.dnnFormItem input[type="checkbox"] + span,
.dnnFormItem input[type="radio"] + span {}


//## Help label

a.dnnFormHelp,
.dnnForm .dnnFormItem a.dnnFormHelp,
.dnnTooltip label a.dnnFormHelp {}

a.dnnFormHelp {}

.dnnLabel {
  display: initial;
  float: initial;
  margin: 0;
  overflow: initial;
  padding: 0;
  position: initial;
  text-align: initial;
  width: initial;
}

.dnnFormItem > .dnnLabel {
  margin-top: 0;
}

.dnnLabel > span {
  text-align: initial;
}

.dnnForm .dnnFormItem a.dnnFormHelp span {}

.dnnForm .dnnFormItem a.dnnFormHelp img {}

.dnnLabel + span {
  display: inline-block;
  margin: 0;
}


//## Help tooltip

.dnnTooltip .dnnFormHelpContent,
.dnnHelperTip .dnnFormHelpContent {}

.dnnFormHelpContent span {}

.bottomArrow::after {}

.topArrow::before {}

a.pinHelp {}


//## Error tooltip

.dnnFormItem span.dnnFormMessage.dnnFormError {
  background-color: rgba($red,.75);
  border-radius: $border-radius-normal;
  color: $white;
  font-size: $size-8;

  &::after {
    border-top-color: $red;
  }
}


//## Input types

.dnnFormItem input[type="text"],
.dnnFormItem input[type="password"],
.dnnFormItem input[type="email"],
.dnnFormItem input[type="tel"],
.dnnFormItem select,
.dnnFormItem textarea {}

.dnnFormItem select {
  //width: initial;

  option {
    color: $gray-3;
  }
}


//## Input customized checkbox

.dnnCheckbox {

  .mark {}

  img {}
}


//## Input customized radiobutton

.dnnRadiobutton {

  .mark {}

  img {}
}


//## General group

div.dnnFormGroup {}


//## Input customized spinner

.dnnSpinner {
  background-color: $white;
  background: linear-gradient(top, #fff 0%,#f0f2f1 100%);
  border-color: $gray-c;
  box-shadow: 0 1 0 0 $gray-b;
  color: $gray-3;

  .dnnFormItem & {}
}

.dnnSpinnerDisplay {
  color: $gray-9;
}


//## Input customized tags

div.dnnTagsInput {}


//## DNN auto complete

.dn_acResults {}
