// ============================================================================
//
//  This file contains all styles for content that appears inside DNN modules.
// 
//  For consistency, all skin and theme objects created by DNN use the same
//  pattern, `.Dnn{Object}`, and BEM-like structure that we use for modules.
//
//  Reference: `Containers/{Client}/README.md`
//
//  --
//
//  [Table of Contents]
//
//  1. Wrapper and base class
//  2. Module title
//  3. Module content
//
// ============================================================================




//
// Wrapper and base class
// ======================
//
// 1. Links that appear inside a module with a background color should be given
//    the `.is-inverse` modifier, and need their border color altered. Normal
//    state is a white border, and we use `$link-hover-color` for hover/focus.
//
// 2. By default these elements have no bottom margin (per `_base.scss`), but
//    we want them to have margin in the flow of module content. So add spacing
//    as long as they aren't the last child, which avoids excess bottom margin.
//
// 3. List items are too close together compared to all other body text
//    elements, so add a little margin between siblings.
//
// 4. For better spacing of body text sections introduced by headings, we add
//    double the default spacing as the top margin for these tags as long as 
//    they aren't the first child inside the parent.
//
// 5. However, because DNN injects an achor tag as the first child of each
//    module — and since we use `<h2>` tags as default module titles — we
//    use the more specific `:first-of-type` pseudo class to ensure all 
//    subsequent occurrences of this tag receive the extra top margin.
// 
// ----------------------------------------------------------------------------

.DnnModule {
  color: $body-color;

  a {
    font-weight: $weight-bold;

    &:not(.btn):not(.is-inverse) {
      border-bottom: $border-width solid $link-border-color;

      @include hover-focus {
        border-bottom-color: $link-hover-border-color;
      }
    }

    &.is-inverse { // 1
      border-bottom: $border-width solid $white;

      @include hover-focus {
        border-bottom-color: rgba(255, 255, 255, 0.5);
      }
    }
  }

  blockquote,
  p,
  ol,
  ul {
    &:not(:last-child) {
      margin-bottom: $spacer; // 2
    }
  }

  li + li {
    margin-top: ($spacer / 4); // 3
  }

  h2, .h2,
  h3, .h3,
  h4, .h4 {
    &:not(:first-child) {
      margin-top: ($spacer * 2); // 4
    }
  }

  blockquote {
    background-color: $blockquote-bg-color;
    border-left: $blockquote-border-width solid $blockquote-border-color;
    font-size: $blockquote-font-size;
    padding: 1.5rem;

    footer {
      color: $blockquote-small-color;
      font-size: $blockquote-small-font-size;

      &::before {
        content: "\2014 \00A0"; // em dash, nbspreb
      }

      a {
        color: $blockquote-small-color;

        @include hover-focus {
          color: $link-hover-color;
          border-bottom-color: $link-hover-border-color;
        }
      }
    }
  }

  ol {
    list-style: decimal outside;
    margin-left: ($spacer * 2);
    margin-right: ($spacer * 2);
    margin-top: $spacer;
  }

  ul {
    list-style: disc outside;
    margin-left: ($spacer * 2);
    margin-right: ($spacer * 2);
    margin-top: $spacer;

    ul {
      list-style-type: circle;
      margin-top: ($spacer / 2);
      margin-bottom: ($spacer / 2);
    }
  }
}




//
// Module title
// ============
//
// 1. Yes, `!important` is generally a bad idea, but we want to override the
//    specificity introduced by the `:not(:first-child)` pseudo class used on 
//    headings inside the base class for this one title class. This is helpful
//    because modules can use various heading tags as their titles, not just
//    `<h2>` tags, so we need to account for this.
// ----------------------------------------------------------------------------

.DnnModule__title {
  margin-top: 0 !important; // 1
}




//
// Module content section
// ======================

.DnnModule__content {}
